name: Deploy SAS Model to Databricks with Embedded Process

on:
  push:
    branches:
      - main
    paths:
      - "data/**"
      - "models/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠️ Print Environment Variables (Debug)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "🔹 Checking Databricks Environment Variables..."
          if [[ -z "$DATABRICKS_HOST" ]]; then echo "❌ ERROR: DATABRICKS_HOST is not set!" && exit 1; fi
          if [[ -z "$DATABRICKS_TOKEN" ]]; then echo "❌ ERROR: DATABRICKS_TOKEN is not set!" && exit 1; fi
          echo "✅ Databricks credentials are set."

      - name: 📂 Install Databricks CLI
        run: |
          pip install --upgrade databricks-cli
          databricks --version

      - name: 🔑 Configure Databricks CLI (Non-Interactive)
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "🔹 Configuring Databricks CLI..."
          mkdir -p ~/.databricks
          echo "[DEFAULT]" > ~/.databricks/config
          echo "host = $DATABRICKS_HOST" >> ~/.databricks/config
          echo "token = $DATABRICKS_TOKEN" >> ~/.databricks/config
          chmod 600 ~/.databricks/config
          echo "✅ Databricks CLI configured successfully!"

      - name: 📤 Upload Model and Data to Databricks
        run: |
          echo "🚀 Uploading train_model.ds2..."
          databricks fs cp --overwrite models/train_model.ds2 dbfs:/mnt/models/train_model.ds2
          echo "✅ train_model.ds2 uploaded!"

          echo "🚀 Uploading dataset.csv..."
          databricks fs cp --overwrite data/dataset.csv dbfs:/mnt/datasets/dataset.csv
          echo "✅ dataset.csv uploaded!"

      - name: 🚀 Run Databricks Job with SAS Embedded Process
        env:
          DATABRICKS_JOB_ID: ${{ secrets.DATABRICKS_JOB_ID }}
        run: |
          echo "🔹 Running Databricks Job with ID: ${DATABRICKS_JOB_ID}"
          databricks jobs run-now --job-id ${DATABRICKS_JOB_ID}
